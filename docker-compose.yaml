services:
  app:
    build:
      context: .
      dockerfile: ./dockerfile
    restart: "unless-stopped"
    entrypoint: ["./web"]
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      migration:
        condition: "service_completed_successfully"

  migration:
    build:
      context: .
      dockerfile: ./dockerfile
    restart: "no"
    entrypoint: ["./efbundle"]
    depends_on:
      db:
        condition: "service_healthy"

  db:
    image: postgres:14.3
    restart: "unless-stopped"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres

volumes:
  postgres-data:
